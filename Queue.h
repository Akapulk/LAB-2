#pragma once
#include "Node.h"

//класс очередь
class Queue {
	int size; //размер очереди
	Node *tail; //указатель на конец очереди
public:
	Queue() {}; //конструктор по умолчанию (пустой)
	//explicit предотвращает неявное преобразование типов при инициализации, то есть нельзя написать "Queue a = 6"
	explicit Queue(int count); //конструктор с параметром
	Queue(const Queue& ob); //конструктор копирования
	~Queue(); //деструктор
	int getSize(); //метод взятия size - размер очереди
	void push(int data); //метод добавления элемента в конец, добавляем переданное в метод значение data
	void show(); //метод вывода очереди на экран

	Queue& operator = (const Queue &ob); //перегрузка оператора присваивания
	Queue operator ! (); //перегрузка оператора отрицание

	Queue& operator ++(); //перегрузка оператора префиксного инкремента
	Queue& operator --(); //перегрузка оператора префиксного декремента
	Queue operator ++(int); //перегрузка оператора постфиксного инкремента
	Queue operator --(int); //перегрузка оператора постфиксного декремента
};